# Generated by Django 5.2.3 on 2025-09-05 07:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('llm_api_base', models.URLField(default='https://server.com/api', help_text='须兼容OpenAI API格式。', verbose_name='LLM API基础URL')),
                ('llm_api_key', models.CharField(default='', max_length=200, verbose_name='LLM API密钥')),
                ('llm_model', models.CharField(default='', max_length=100, verbose_name='LLM 模型名称')),
                ('web_host', models.CharField(default='0.0.0.0', max_length=100, verbose_name='Web服务器监听地址')),
                ('web_http_port', models.IntegerField(default=8000, verbose_name='HTTP端口')),
                ('web_https_port', models.IntegerField(default=8443, verbose_name='HTTPS端口')),
                ('web_ssl_enabled', models.BooleanField(default=False, verbose_name='启用HTTPS/SSL')),
                ('web_ssl_cert_file', models.FileField(blank=True, help_text='文件类型：crt、pem', null=True, upload_to='ssl_certs/', verbose_name='SSL证书文件')),
                ('web_ssl_key_file', models.FileField(blank=True, help_text='文件类型：key', null=True, upload_to='ssl_certs/', verbose_name='SSL私钥文件')),
                ('funasr_host', models.CharField(default='funasr_server', max_length=100, verbose_name='FunASR服务器地址')),
                ('funasr_port', models.IntegerField(default=10095, verbose_name='FunASR服务器端口')),
                ('funasr_mode', models.CharField(choices=[('offline', '离线模式'), ('online', '在线模式'), ('2pass-offline', '2pass离线模式')], default='2pass-offline', verbose_name='FunASR模式')),
                ('funasr_ssl', models.BooleanField(default=False, verbose_name='使用SSL')),
                ('funasr_ssl_verify', models.BooleanField(default=False, verbose_name='验证SSL证书')),
                ('use_connection_pool', models.BooleanField(default=True, verbose_name='使用FunASR连接池模式')),
                ('pool_min_connections', models.IntegerField(default=2, verbose_name='连接池最小连接数')),
                ('pool_max_connections', models.IntegerField(default=20, verbose_name='连接池最大连接数')),
                ('pool_max_idle_time', models.IntegerField(default=300, verbose_name='连接最大空闲时间（秒）')),
                ('session_cleanup_hours', models.IntegerField(default=1, verbose_name='清理非活跃用户的小时数')),
                ('max_conversation_history', models.IntegerField(default=5, verbose_name='最大对话历史轮数')),
                ('continuous_conversation', models.BooleanField(default=True, help_text='启用时为持续对话模式，关闭时为一次性对话模式。', verbose_name='持续对话模式')),
                ('tts_enabled', models.BooleanField(default=False, verbose_name='启用TTS功能')),
                ('tts_api_key', models.CharField(default='', max_length=200, verbose_name='DashScope API密钥')),
                ('tts_model', models.CharField(default='cosyvoice-v2', max_length=50, verbose_name='TTS模型名称')),
                ('tts_sample_rate', models.IntegerField(choices=[(8000, '8kHz'), (16000, '16kHz'), (22050, '22.05kHz'), (24000, '24kHz'), (44100, '44.1kHz'), (48000, '48kHz')], default=22050, verbose_name='TTS采样率')),
                ('tts_volume', models.IntegerField(default=80, help_text='音量大小，范围0-100', verbose_name='TTS音量')),
                ('tts_speech_rate', models.FloatField(default=1.0, help_text='语速倍率，1.0为正常语速', verbose_name='TTS语速')),
                ('tts_pitch_rate', models.FloatField(default=1.0, help_text='音调倍率，1.0为正常音调', verbose_name='TTS音调')),
                ('tts_audio_format', models.CharField(choices=[('pcm', 'PCM'), ('mp3', 'MP3'), ('wav', 'WAV')], default='pcm', help_text='音频输出格式', max_length=10, verbose_name='TTS音频格式')),
                ('tts_default_voice', models.CharField(default='longanran', max_length=50, verbose_name='TTS默认音色')),
                ('tts_mandarin_voice', models.CharField(default='longanran', max_length=50, verbose_name='TTS普通话音色')),
                ('tts_cantonese_voice', models.CharField(default='longtao_v2', max_length=50, verbose_name='TTS粤语音色')),
                ('tts_english_voice', models.CharField(default='loongcally_v2', max_length=50, verbose_name='TTS英语音色')),
                ('tts_japanese_voice', models.CharField(default='loongtomoka_v2', max_length=50, verbose_name='TTS日语音色')),
                ('tts_korean_voice', models.CharField(default='loongkyong_v2', max_length=50, verbose_name='TTS韩语音色')),
                ('tts_use_connection_pool', models.BooleanField(default=True, verbose_name='启用TTS连接池模式')),
                ('tts_pool_max_connections', models.IntegerField(default=10, verbose_name='TTS连接池最大连接数')),
                ('tts_connection_max_error_count', models.IntegerField(default=3, verbose_name='TTS连接最大错误次数')),
                ('tts_connection_max_idle_time', models.FloatField(default=300.0, verbose_name='TTS连接最大空闲时间（秒）')),
                ('tts_pool_cleanup_interval', models.FloatField(default=60.0, verbose_name='TTS连接池清理间隔（秒）')),
                ('page_title_zh', models.CharField(default='实时智能语音对话', max_length=100, verbose_name='页面标题（中文）')),
                ('page_title_en', models.CharField(default='Real-time AI Voice Chat', max_length=100, verbose_name='页面标题（英文）')),
                ('main_title_zh', models.CharField(default='实时智能语音助手', max_length=100, verbose_name='主标题（中文）')),
                ('main_title_en', models.CharField(default='Real-time AI Voice Assistant', max_length=100, verbose_name='主标题（英文）')),
                ('logo_image', models.ImageField(blank=True, help_text='支持PNG、JPG、SVG等格式，建议尺寸：154x35像素', null=True, upload_to='logos/', verbose_name='Logo图片')),
                ('ai_system_prompt', models.TextField(default='你是一个AI语音助手，请尽可能简短自然的回答用户，你的回答将直接被转换为语音播放给用户，要考虑语音播放的时长。', help_text='AI助手的系统提示词，用于定义AI的角色和行为', verbose_name='AI系统提示词')),
                ('filter_think_tags', models.BooleanField(default=False, help_text='过滤AI响应中的think标签及其内容，仅适用于LLM推理模型。', verbose_name='过滤think标签')),
                ('use_nothink_prefix', models.BooleanField(default=False, help_text='指示AI不使用推理模式，仅适用于部分LLM动态推理模型，如QWen3部分系列模型。', verbose_name='使用/nothink前缀')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '系统配置',
                'verbose_name_plural': '系统配置',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=50, unique=True, verbose_name='会话ID')),
                ('conversation_history', models.JSONField(default=list, verbose_name='对话历史')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '用户会话',
                'verbose_name_plural': '用户会话',
                'ordering': ['-last_active'],
            },
        ),
    ]
